/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyToken, MyTokenInterface } from "../../TestERC20.sol/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ac038038062001ac0833981810160405281019062000037919062000253565b816000908162000048919062000523565b5080600190816200005a919062000523565b506012600260006101000a81548160ff021916908360ff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200060a565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200012982620000de565b810181811067ffffffffffffffff821117156200014b576200014a620000ef565b5b80604052505050565b600062000160620000c0565b90506200016e82826200011e565b919050565b600067ffffffffffffffff821115620001915762000190620000ef565b5b6200019c82620000de565b9050602081019050919050565b60005b83811015620001c9578082015181840152602081019050620001ac565b60008484015250505050565b6000620001ec620001e68462000173565b62000154565b9050828152602081018484840111156200020b576200020a620000d9565b5b62000218848285620001a9565b509392505050565b600082601f830112620002385762000237620000d4565b5b81516200024a848260208601620001d5565b91505092915050565b600080604083850312156200026d576200026c620000ca565b5b600083015167ffffffffffffffff8111156200028e576200028d620000cf565b5b6200029c8582860162000220565b925050602083015167ffffffffffffffff811115620002c057620002bf620000cf565b5b620002ce8582860162000220565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200032b57607f821691505b602082108103620003415762000340620002e3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003ab7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200036c565b620003b786836200036c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000404620003fe620003f884620003cf565b620003d9565b620003cf565b9050919050565b6000819050919050565b6200042083620003e3565b620004386200042f826200040b565b84845462000379565b825550505050565b600090565b6200044f62000440565b6200045c81848462000415565b505050565b5b8181101562000484576200047860008262000445565b60018101905062000462565b5050565b601f821115620004d3576200049d8162000347565b620004a8846200035c565b81016020851015620004b8578190505b620004d0620004c7856200035c565b83018262000461565b50505b505050565b600082821c905092915050565b6000620004f860001984600802620004d8565b1980831691505092915050565b6000620005138383620004e5565b9150826002028217905092915050565b6200052e82620002d8565b67ffffffffffffffff8111156200054a5762000549620000ef565b5b62000556825462000312565b6200056382828562000488565b600060209050601f8311600181146200059b576000841562000586578287015190505b62000592858262000505565b86555062000602565b601f198416620005ab8662000347565b60005b82811015620005d557848901518255600182019150602085019450602081019050620005ae565b86831015620005f55784890151620005f1601f891682620004e5565b8355505b6001600288020188555050505b505050505050565b6114a6806200061a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015d57806370a082311461017957806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610de1565b60405180910390f35b6100db60048036038101906100d69190610e9c565b6102b9565b6040516100e89190610ef7565b60405180910390f35b6100f96103ab565b6040516101069190610f21565b60405180910390f35b61012960048036038101906101249190610f3c565b6103b5565b6040516101369190610ef7565b60405180910390f35b610147610784565b6040516101549190610fab565b60405180910390f35b61017760048036038101906101729190610e9c565b61079b565b005b610193600480360381019061018e9190610fc6565b610973565b6040516101a09190610f21565b60405180910390f35b6101b16109bc565b6040516101be9190610de1565b60405180910390f35b6101e160048036038101906101dc9190610e9c565b610a4e565b6040516101ee9190610ef7565b60405180910390f35b610211600480360381019061020c9190610ff3565b610cca565b60405161021e9190610f21565b60405180910390f35b60606000805461023690611062565b80601f016020809104026020016040519081016040528092919081815260200182805461026290611062565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103999190610f21565b60405180910390a36001905092915050565b6000600354905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c90611105565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90611197565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90611229565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc906112bb565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610624919061130a565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461067a919061133e565b9250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461070d919061130a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107719190610f21565b60405180910390a3600190509392505050565b6000600260009054906101000a900460ff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610822906113e4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190611450565b60405180910390fd5b80600360008282546108ac919061133e565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610902919061133e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109679190610f21565b60405180910390a35050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546109cb90611062565b80601f01602080910402602001604051908101604052809291908181526020018280546109f790611062565b8015610a445780601f10610a1957610100808354040283529160200191610a44565b820191906000526020600020905b815481529060010190602001808311610a2757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610abe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab590611105565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2490611197565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba690611229565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bfe919061130a565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c54919061133e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cb89190610f21565b60405180910390a36001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d8b578082015181840152602081019050610d70565b60008484015250505050565b6000601f19601f8301169050919050565b6000610db382610d51565b610dbd8185610d5c565b9350610dcd818560208601610d6d565b610dd681610d97565b840191505092915050565b60006020820190508181036000830152610dfb8184610da8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e3382610e08565b9050919050565b610e4381610e28565b8114610e4e57600080fd5b50565b600081359050610e6081610e3a565b92915050565b6000819050919050565b610e7981610e66565b8114610e8457600080fd5b50565b600081359050610e9681610e70565b92915050565b60008060408385031215610eb357610eb2610e03565b5b6000610ec185828601610e51565b9250506020610ed285828601610e87565b9150509250929050565b60008115159050919050565b610ef181610edc565b82525050565b6000602082019050610f0c6000830184610ee8565b92915050565b610f1b81610e66565b82525050565b6000602082019050610f366000830184610f12565b92915050565b600080600060608486031215610f5557610f54610e03565b5b6000610f6386828701610e51565b9350506020610f7486828701610e51565b9250506040610f8586828701610e87565b9150509250925092565b600060ff82169050919050565b610fa581610f8f565b82525050565b6000602082019050610fc06000830184610f9c565b92915050565b600060208284031215610fdc57610fdb610e03565b5b6000610fea84828501610e51565b91505092915050565b6000806040838503121561100a57611009610e03565b5b600061101885828601610e51565b925050602061102985828601610e51565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061107a57607f821691505b60208210810361108d5761108c611033565b5b50919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110ef602583610d5c565b91506110fa82611093565b604082019050919050565b6000602082019050818103600083015261111e816110e2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611181602383610d5c565b915061118c82611125565b604082019050919050565b600060208201905081810360008301526111b081611174565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611213602683610d5c565b915061121e826111b7565b604082019050919050565b6000602082019050818103600083015261124281611206565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b60006112a5602883610d5c565b91506112b082611249565b604082019050919050565b600060208201905081810360008301526112d481611298565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131582610e66565b915061132083610e66565b9250828203905081811115611338576113376112db565b5b92915050565b600061134982610e66565b915061135483610e66565b925082820190508082111561136c5761136b6112db565b5b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006113ce602183610d5c565b91506113d982611372565b604082019050919050565b600060208201905081810360008301526113fd816113c1565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061143a601f83610d5c565b915061144582611404565b602082019050919050565b600060208201905081810360008301526114698161142d565b905091905056fea2646970667358221220cda4783f7f9e4cc61412427d0838b80228d6e8db00f481158d855f5e840260a164736f6c63430008120033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
